version: "3.3"

services:
  agent:
    image: portainer/agent
    environment:
      TZ: ${TIME_ZONE:-America/Sao_Paulo}
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent-network
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux

  webserver:
    image: portainer/portainer-ce
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - data:/data
    networks:
      - agent-network
      - traefik-public
    environment:
      TZ: ${TIME_ZONE:-America/Sao_Paulo}
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        # Enable Traefik for this service, to make it available in the public network
        - traefik.enable=true
        # Use the traefik-public network
        - traefik.docker.network=traefik-public
        # Use the custom label "traefik.constraint-label=traefik-public"
        - traefik.constraint-label=traefik-public
        # traefik-https the actual router using HTTPS
        # Uses the environment variable BASE_DOMAIN
        - traefik.http.routers.portainer.rule=Host(`portainer.${BASE_DOMAIN?Variable not set}`)
        - traefik.http.routers.portainer.entrypoints=https
        - traefik.http.routers.portainer.tls=true
        # Serve the container on port 9000
        - traefik.http.services.portainer.loadbalancer.server.port=9000
        # Use the "le" (Let's Encrypt) resolver
        - traefik.http.routers.portainer.tls.certresolver=le

        # Homepage labels
        - homepage.group=Docker
        - homepage.name=Portainer
        - homepage.icon=portainer.png
        - homepage.href=https://portainer.${BASE_DOMAIN?Variable not set}
        - homepage.description=Platform for containerized applications

networks:
  agent-network:
    attachable: true
  traefik-public:
    external: true

volumes:
  # Create the volume to store portainer data, the volume is saved on the NFS share
  # In specific, inside the portainer directory
  data:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=${NFS_IP?Variable not set},nolock,soft,rw
      device: ":${NFS_SHARE_PATH?Variable not set}/docker-swarm/portainer/portainer-volume"
